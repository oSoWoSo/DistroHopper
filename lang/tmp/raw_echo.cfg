17:echo "$MSG_RUNNING"
22:		echo ""
23:		echo "$MSG_DONE"
24:		echo ""
25:		echo "$MSG_BUGS"
26:		echo "$MSG_FEEDBACK"
27:		echo "$MSG_LIKE"
28:		echo "$MSG_IMPROVE"
29:		echo "$MSG_KNOW"
30:		echo ""
31:		echo "$MSG_FLAWLESS"
32:		echo "			zenobit"
36:		echo "DistroHopper v. $version"
37:		echo "quickemu v. $("$portable_prefix"quickemu --version)"
39:		echo "$MSG_ARGUMENTS"
41:		echo "---------------------------------------------------------"
44:		echo "---------------------------------------------------------"
46:		echo "---------------------------------------------------------"
49:		echo "---------------------------------------------------------"
52:		echo "---------------------------------------------------------"
56:		echo "---------------------------------------------------------"
58:		echo "---------------------------------------------------------"
60:		echo "---------------------------------------------------------"
61:		echo "$MSG_HOMEPAGE"
62:		echo "$MSG_HOSTED"
63:		echo "$MSG_CHAT"
88:		[ -f "$PATH_PREFIX/yad" ] || echo "$MSG_YAD"
92:		[ -f "$PATH_PREFIX/fzf" ] || echo "$MSG_FZF"
139:		echo "$MSG_CONFIG"
141:		echo "$MSG_ICONS"
146:		echo "$MSG_INTERM"
166:		echo "VMS_DIR=\"$VMS_DIR\"
182:				echo "$MSG_ERROR
208:		echo "$MSG_C_ICONS"
210:		echo "$MSG_C_ENTRIES"
219:		echo "$MSG_NEEDED"
221:		echo "$MSG_STRUCTURE" \
223:		 && echo "$MSG_SETTINGUP" \
225:		 && echo "$MSG_INSTALLING" \
227:		 && echo "$MSG_C_ENTRY" \
247:	#		echo $"No .conf files found"
279:		echo "$MSG_INTERM"
284:			vm_desktop=$(echo "$get_name" | tr ' ' '_')
295:			echo "$MSG_CREATING $vm_desktop $MSG_DESKTOP_ENTRY"
296:			echo ""
366:		echo "  DEBUG
367:		echo $?
386:				if [ "$(echo "$choices" | wc -l)" = 1 ]; then
405:			echo "$MSG_NO_VM"
410:		echo "-------------"
412:		echo "$MSG_NEW (c)"
433:		release=$(echo "$releases" | fzf --cycle --header='Choose Release
438:		edition=$(echo "$editions" | fzf --cycle --header='Choose Edition
443:		wrelease=$(echo "8
454:		answer=$(echo "Default English
459:		choosed=$(echo "$(ls ***.conf 2>/dev/null | sed 's/\.conf$//')" | fzf --cycle --header='Choose VM to run
465:		releases=$(echo "$result" | head -1)
466:		editions=$(echo "$result" | tail -1)
528:	echo $RELEASES
532:	echo $EDITIONS
543:	echo "\${URL}/\${ISO}" "\${HASH}"
547:		echo "$MSG_DONE"
558:		sorted_function_names=$(echo "$function_names" | sort)
568:		echo "$MSG_LANG_CHANGE"
569:		echo "$MSG_LANG_CODE"
571:		echo "$MSG_LANG
572:		echo "$MSG_DUMP"
574:		echo "$MSG_MERGING"
576:		echo "$MSG_MO"
578:		echo "$MSG_COPY $lang $MSG_TRANSLATION '/usr/share/local' $MSG_AS_ROOT"
581:			echo "$MSG_C_TRANSLATION '/usr/share/local'..."
587:		echo ""
591:		echo "$MSG_DEFAULT_TERMINAL
648:					echo "$MSG_INVALID_AGAIN"
653:		echo "$MSG_TERMINAL_SET $terminal."
679:				echo "$MSG_S_INSTALLATION"
684:				echo "$MSG_MODE"
689:				echo "$MSG_U_SUPPORTED"
694:				echo "$MSG_U_READY"
699:				echo "$MSG_S_TUI"
704:				echo "$MSG_S_GUI"
709:				echo "$MSG_ADD_STARTED"
714:				echo "$MSG_SORTING"
719:				echo "$MSG_PUSHING"
724:				echo "$MSG_C_ISOS"
737:				echo "$MSG_INVALID
738:				echo ""
